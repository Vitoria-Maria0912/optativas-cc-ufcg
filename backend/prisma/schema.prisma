
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Discipline {
  id               Int        @id @default(autoincrement())
  type             Type       @default(OBRIGATORY)
  name             String     @unique 
  acronym          String     
  teacher          String     @default("Undefined")
  available        Boolean    @default(true)
  description      String
  pre_requisites   String[] 
  post_requisites  String[] 
  schedule         String     @default("Undefined")
  periods          Period[]   @relation("PeriodDisciplines")
  users            User[]     @relation("UserDisciplines") // Relação com usuários
  usersPlanning    User[]     @relation("UserDisciplinesPlanning") // Relação oposta
}


model Period {
  id         Int          @id @default(autoincrement())
  name       String
  disciplines Discipline[] @relation("PeriodDisciplines")
  planning   Planning?    @relation("PlanningPeriods", fields: [planningId], references: [id])
  planningId Int?
}

model Planning {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  periods Period[] @relation("PlanningPeriods")
  user    User     @relation("UserPlannings", fields: [userId], references: [id]) // Specify fields and references
  userId  Int      // Add this field to store the foreign key
}


enum Type {
  OBRIGATORY
  OPTATIVE
}

enum Role {
  ADMINISTRATOR
  COMMON
}

model User {
  id              Int           @id @default(autoincrement())
  role            Role          @default(COMMON)
  name            String
  email           String        @unique
  loginId         Int?          @unique     
  planning        Discipline[]  @relation("UserDisciplinesPlanning") // Novo nome para a relação
  login           Login?        @relation(fields: [loginId], references: [id])
  plannings       Planning[]    @relation("UserPlannings")
  disciplineUsers Discipline[]  @relation("UserDisciplines") // Relacionamento original
}

model Login {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  password        String

  User            User?
}